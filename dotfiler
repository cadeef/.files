#!/usr/bin/env bash

set -euo pipefail

# Config defaults
install_dir="${HOME}/.files"
src_dir=$(mktemp -d)
repo_url='https://github.com/cadeef/.files.git'

main() {
    load_config
    local option=${1:-ask}

    if [[ ${option} == "--force" || ${option} == "-f" ]]; then
        install
    else
        echo -n "This may overwrite existing files in your home directory. Are you sure? [y|n]: "
        read -r -n 1 REPLY
        echo
        if [[ ${REPLY} =~ ^[Yy]$ ]]; then
            install
        fi
    fi
    unset option
}

get_source() {
    git clone "${df_repo_url}" "${df_src_dir}"
}

install() {
    get_source

    run_scripts 'pre'

    cd "${df_src_dir}" || (
        echo "FATAL: Could not change to ${df_src_dir}"
        exit 5
    )

    for dir in {bin,state,bash.d}; do
        path="$df_install_dir/$dir"
        [[ -d ${path} ]] || mkdir -v -p "${path}"
        [[ -d "./${dir}" ]] && rsync -ah --no-perms "./${dir}/" "${path}/"
    done

    rsync -ah --no-perms ./dots/ "${HOME}/"
    chmod +x ./dotfiler
    cp -f ./dotfiler "${df_install_dir}/bin"

    config_file="${df_install_dir}/config"
    if [[ ! -f ${config_file} ]]; then
        cat << EOF > "${install_dir}/config"
df_install_dir=${df_install_dir}
df_repo_url=${df_repo_url}
EOF

    echo "Config file (${config_file}) didn't exist, you probably want to set df_git_user and df_git_email"

    fi

    run_scripts 'post'

    echo -e '\nINSTALL COMPLETE\n\n'

    # Don't bother following to .bash_profile, it gets checked elsewhere
    # shellcheck disable=SC1090
    source "${HOME}/.bash_profile"
}

load_config() {
    # shellcheck disable=SC1090
    [[ -r "${install_dir}/config" ]] && source "${install_dir}/config"

    df_install_dir=${df_install_dir:-${install_dir}}
    df_src_dir=${df_src_dir:-${src_dir}}
    df_repo_url=${df_repo_url:-${repo_url}}
}

run_scripts() {
    local prefix=${1:-none}

    if [[ ${prefix} =~ ^pre|post$ ]]; then
        for script in "${df_src_dir}/scripts/${prefix}"_*.sh; do
            if [[ -r ${script} ]]; then
                echo "Running ${script}"
                bash "${script}"
            fi
        done
    else
        echo "run_scripts only accepts pre or post"
        exit 1
    fi
}

main "$@"
